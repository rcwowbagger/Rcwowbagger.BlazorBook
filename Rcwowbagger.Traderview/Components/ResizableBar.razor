<div class="resizable-bar-container" style="background-color:@BackgroundColor;">
    <div class="resizable-bar" style="width:@Value%; background-color:@BarColor;@(IsReversed ? " right: 0;" : "")"></div>
</div>

<style>
    .resizable-bar-container {
        width: 100%;
        height: 20px; /* Default height; can adjust if needed */
        position: relative;
        overflow: hidden;
        border-radius: 5px;
    }

    .resizable-bar {
        height: 100%;
        position: absolute;
        left: 0;
        transition: width 0.3s ease; /* Smooth transition for resizing */
    }
</style>

@code {
    [Parameter] public double Value { get; set; } = 50; // Value as a percentage (0 to 100)
    [Parameter] public string BarColor { get; set; } = "#66ff66"; // Default bar color (green)
    [Parameter] public string BackgroundColor { get; set; } = "#f0f0f0"; // Default background color
    [Parameter] public bool IsReversed { get; set; } = false; // Reverse the bar direction if true

    // EventCallback to enable two-way binding
    [Parameter] public EventCallback<double> ValueChanged { get; set; }

    private async Task SetValue(double newValue)
    {
        if (newValue != Value)
        {
            Value = newValue;
            await ValueChanged.InvokeAsync(newValue); // Notify parent component of change
        }
    }
}